전반적으로 문제 해석하는 것도 오래걸림.....

2. Occupation : 
(출처 : https://didu-story.tistory.com/95) 
 - group by, partition 의 적절한 사용 
 - 서브쿼리
 - 집계함수가 있어야 group by를 사용할 수 있음 + 값이 없을 때 NULL로 처리해주기 위해 MAX 넣어줌
 - 테이블을 가로로 붙이는 것은 불가능
   > 따라서 서브쿼리를 사용하거나, PIVOT 을 활용해서 뒤집어주는 방법 등을 사용한다

3. case when~ then 을 통해 나눠주기만 하면 됨
 - is null 

4. (못풀었음) 회사코드(company_code)에 해당하는 직급별 인원수를 각각 구하는 문제 

- 조인을 쓰는 경우
'''
select a.company_code
     , a.founder
     , count(distinct b.lead_manager_code)
     , count(distinct c.senior_manager_code)
     , count(distinct d.manager_code)
     , count(distinct e.employee_code)
from company a
     left join lead_manager b on a.company_code = b.company_code
     left join senior_manager c on b.lead_manager_code = c.lead_manager_code
     left join manager d on c.senior_manager_code = d.senior_manager_code
     left join employee e on e.manager_code = d.manager_code
group by a.company_code, a.founder
'''

- select만을 이용하는 경우
'''
select a.company_code, a.founder,
(select count(distinct lead_manager_code) from lead_manager where company_code = a.company_code),
(select count(distinct senior_manager_code) from senior_manager where company_code = a.company_code),
(select count(distinct manager_code) from manager where company_code = a.company_code),
(select count(distinct employee_code) from employee where company_code = a.company_code)
from company a
order by a.company_code asc;
'''

5. 
 - 조인의 활용
 - 조인까지는 했는데, 막상 서브쿼리를 활용한 도전 횟수 구하는 걸 못떠올림 
 결국, https://jogrammer.tistory.com/274 참조
 - 보니까 더 어려웠던 것 같지만.... 최대 도전 횟수를 구하고 중복되지 않는 도전 횟수를 구한다.
 - 

7. 못풀었음.... 아예 다음에 다시 보는게 좋을 것 같다

8. 맨해튼 거리 
 - 직각에서 축을 따라 측정된 두 점 사이의 거리.
 - (x1, y1)에서p1 및 p2가 (x2,y2)인 평면에서,
 ->>   |x1 -x2| + |y1 - y2|

9. 유클리드 거리

10. 
- 메디안을 사용하기 위한 percent_rank()  떠올리기
- 윈도우 함수 
 > 함수(컬럼) OVER (PATITION BY 컬럼 ORDER BY 컬럼) 